
CREATE OR REPLACE TEMPORARY TABLE TEMP_QUERY_HISTORY AS
SELECT START_TIME::DATE AS START_DATE, * FROM TABLE(information_schema.query_history(RESULT_LIMIT => 10000));

MERGE INTO query_history q 
USING temp_query_history t 
ON q.start_date = t.start_date AND q.query_id = t.query_id 
WHEN NOT matched THEN 
  INSERT (start_date, 
          query_id, 
          query_text, 
          database_name, 
          schema_name, 
          query_type, 
          session_id, 
          user_name, 
          role_name, 
          warehouse_name, 
          warehouse_size, 
          warehouse_type, 
          query_tag, 
          execution_status, 
          error_code, 
          error_message, 
          start_time, 
          end_time, 
          total_elapsed_time, 
          compilation_time, 
          execution_time, 
          queued_provisioning_time, 
          queued_repair_time, 
          queued_overload_time, 
          transaction_blocked_time, 
          outbound_data_transfer_cloud, 
          outbound_data_transfer_region, 
          outbound_data_transfer_bytes) 
  VALUES( t.start_date, 
          t.query_id, 
          t.query_text, 
          t.database_name, 
          t.schema_name, 
          t.query_type, 
          t.session_id, 
          t.user_name, 
          t.role_name, 
          t.warehouse_name, 
          t.warehouse_size, 
          t.warehouse_type, 
          t.query_tag, 
          t.execution_status, 
          t.error_code, 
          t.error_message, 
          t.start_time, 
          t.end_time, 
          t.total_elapsed_time, 
          t.compilation_time, 
          t.execution_time, 
          t.queued_provisioning_time, 
          t.queued_repair_time, 
          t.queued_overload_time, 
          t.transaction_blocked_time, 
          t.outbound_data_transfer_cloud, 
          t.outbound_data_transfer_region, 
          t.outbound_data_transfer_bytes) 
WHEN matched THEN 
  UPDATE SET q.query_text = t.query_text, 
             q.database_name = t.database_name, 
             q.schema_name = t.schema_name, 
             q.query_type = t.query_type, 
             q.session_id = t.session_id, 
             q.user_name = t.user_name, 
             q.role_name = t.role_name, 
             q.warehouse_name = t.warehouse_name, 
             q.warehouse_size = t.warehouse_size, 
             q.warehouse_type = t.warehouse_type, 
             q.query_tag = t.query_tag, 
             q.execution_status = t.execution_status, 
             q.error_code = t.error_code, 
             q.error_message = t.error_message, 
             q.start_time = t.start_time, 
             q.end_time = t.end_time, 
             q.total_elapsed_time = t.total_elapsed_time, 
             q.compilation_time = t.compilation_time, 
             q.execution_time = t.execution_time, 
             q.queued_provisioning_time = t.queued_provisioning_time, 
             q.queued_repair_time = t.queued_repair_time, 
             q.queued_overload_time = t.queued_overload_time, 
             q.transaction_blocked_time = t.transaction_blocked_time, 
             q.outbound_data_transfer_cloud = t.outbound_data_transfer_cloud, 
             q.outbound_data_transfer_region = t.outbound_data_transfer_region, 
             q.outbound_data_transfer_bytes = t.outbound_data_transfer_bytes; 